[include shell_command.cfg]
# This file contains common pin mappings for the BIGTREETECH SKR
# MINI 2.0. To use this config, the firmware should be compiled for 
# the STM32F103 with a "28KiB bootloader". Also select "enable extra 
# low-level configuration options" and configure "GPIO pins to set 
# at micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini with that SD card.

## Voron Design VORON 0.1 SKR Mini E3 V2 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU path                                                                     [mcu] section
## Z and Extruder motor currents                                                [tmc2209 stepper_*] sections. Uncomment the stepper motor you have
## Full steps per rotation for Extruder                                         [extruder] section
## Thermistor types                                                             [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Extruder motor currents                                                      [extruder] section
## PID tune                                                                     [extruder] and [heater_bed] sections
## Fine tune E steps                                                            [extruder] section
## For more info                                                                check https://docs.vorondesign.com/build/startup/#v0

[include led_progress.cfg]
[include timelapse.cfg]
[include klicky-variables.cfg]
[include klicky-macros.cfg]
#[include bedmash.cfg]
[include adaptive_mesh.cfg]
[include flow_calibrate.cfg]
[include adaptive_purge.cfg]
[include nozzlewiper.cfg]
[include pa_calibrate.cfg]
[include fans.cfg]
#[include lcd.cfg]
#[include display_menu.cfg]
#[include magprobe.cfg]
[mcu] 
#####################################################################
# Obtain definition by "ls -l /dev/serial/by-id/"
#####################################################################
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_30FFDD054B43343122622043-if00

[mcu expander]
serial:  /dev/serial/by-id/usb-Klipper_stm32f042x6_2C0021000843534133343520-if00
restart_method: command

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points: 60, 60, 20  # an example


[input_shaper]
shaper_freq_x: 69.8
shaper_type_x: ei
shaper_freq_y: 68
shaper_type_y: 2hump_ei

[printer]
kinematics: corexy
max_velocity: 200
max_accel: 4000  # should not exceed the estimated max_accel for X and Y axes
max_z_velocity: 15
max_z_accel: 45
square_corner_velocity: 6.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
step_pin: PB13
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: PB12                                                       # Check motor direction in link above. If inverted, add a ! before PB12
enable_pin: !PB14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: ^PC0 
position_endstop: 120
position_max: 120
homing_speed: 50                                                    # Can be increased after initial setup, Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
interpolate: False
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

[stepper_y]
step_pin: PB10
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: PB2                                                        # Check motor direction in link above. If inverted, add a ! before PB2
enable_pin: !PB11
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: ^PC1
position_endstop: 120
position_max: 120
homing_speed: 50                                                    # Can be increased after initial setup, Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
interpolate: False
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: PB0
dir_pin: !PC5                                                       # Remove the ! before PC5 if motor direction is inverted.
enable_pin: !PB1
rotation_distance: 8                                                # For T8x8 integrated lead screw
microsteps: 32
endstop_pin: ^PC2
#position_endstop: -0.10
position_max: 110
position_min: -1.5
homing_speed: 10
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
interpolate: False
## For OMC (StepperOnline) 17LS13-0404E-200G 0.4A 
#run_current: 0.2
## For LDO-42STH25-1004CL200E 1.0A
run_current: 0.37
sense_resistor: 0.110
stealthchop_threshold: 999999                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: PB3
dir_pin: !PB4                                                        # Add ! if moving opposite direction
enable_pin: !PD2
#full_steps_per_rotation: 200                                       # Set to 200 for LDO 1.8° stepper motor, and set to 400 for OMC(StepperOnline) 0.9° stepper motor
rotation_distance: 22.23                                            # See calibrating rotation_distance on extruders doc
gear_ratio: 50:10                                                   # For Mini Afterburner
microsteps: 32
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950
sensor_pin: PA0
control: pid                                                        # Do PID calibration after initial checks
pid_Kp: 28.182
pid_Ki: 1.978
pid_Kd: 100.397
min_temp: 0
max_temp: 270
min_extrude_temp: 170
max_extrude_only_distance: 150
max_extrude_cross_section: 5
pressure_advance: 0.035                                              # See tuning pressure advance doc
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
interpolate: False
## For OMC (StepperOnline) 14HR07-1004VRN 1A 0.9°
#run_current: 0.5   # for OMC 14HR07-1004VRN rated at 1A
## For LDO LDO 36STH17-1004AHG 1A 1.8° 
#run_current: 0.3   # for LDO 36STH17-1004AHG
## For LDO LDO 36STH20-1004AHG 1A 1.8° 
run_current: 0.6   # for LDO 36STH20-1004AHG
sense_resistor: 0.110
stealthchop_threshold: 999999                                            # Set to 0 for spreadcycle, avoid using stealthchop on extruder

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: PC9
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PC3
smooth_time: 3.0
#max_power: 0.6                                                     # Only needed for 100w pads
min_temp: 0
max_temp: 120
control: pid                                                        # Do PID calibration after initial checks
pid_kp: 68.453
pid_ki: 2.749
pid_kd: 426.122

#####################################################################
#   Fan Control
#####################################################################

[heater_fan hotend_fan]
pin: PC7
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
#fan_speed: 1.0                                                     # You can't PWM the delta fan unless using blue wire

[fan]
pin: PC6
max_power: 1.0
kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.010

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

#[safe_z_home]
#home_xy_position: 120,120
#speed: 50.0
#z_hop: 5

## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 60,12
screw1_name: front screw
screw2: 10,110
screw2_name: back left
screw3: 110,110
screw3_name: back right

[virtual_sdcard]
path: ~/printer_data/gcodes/
#   The path of the local directory on the host machine to look for
#   g-code files. This is a read-only directory (sdcard file writes
#   are not supported). One may point this to OctoPrint's upload
#   directory (generally ~/.octoprint/uploads/ ). This parameter must
#   be provided.
#on_error_gcode:

[probe]
#with Klicky Probe
pin: ^PC14
x_offset: 30 #(9.5 with front cowling)
y_offset: 0
#z_offset: 10
speed: 7
lift_speed: 7

samples: 3
samples_result: median
sample_retract_dist: 2

samples_tolerance: 0.01
samples_tolerance_retries: 10

[bed_mesh]
mesh_min: 31,13
mesh_max: 115,115
speed: 100
horizontal_move_z: 18

probe_count: 3,3					#if you would like more detail, use 5,5 here
relative_reference_index: 4			 #if you use 5,5 above, place 12 here
move_check_distance: 3

algorithm: lagrange
fade_start: 1
fade_end: 10
fade_target: 0
split_delta_z: 0.0125
mesh_pps: 2,2

[screws_tilt_adjust]
screw1: 110,110          #For Long probe
screw1_name: back right
screw2: 10,110            #For Long probe
screw2_name: back left
screw3: 60,5             #For Long probe
screw3_name: front screw
horizontal_move_z: 20
speed: 100
screw_thread: CW-M3

[temperature_sensor chamber_temp]
sensor_type: Generic 3950
sensor_pin: expander:PA5
gcode_id: T1

[neopixel my_led] 
## Chamber Lighting - In 5V-RGB 
pin: PA8 
chain_count: 21
initial_RED: 0 
initial_GREEN: 0 
initial_BLUE: 0

[display_status]

    
[display_glyph voron]
data:
    0000001110000000
    0000111111100000
    0001111111110000
    0111111111111100
    1111100111001110
    1111001110011110
    1110011100111110
    1100111001111110
    1111110011100110
    1111100111001110
    1111001110011110
    1110011100111110
    0111111111111100
    0001111111110000
    0000111111100000
    0000001110000000

[display_glyph speed]
data:
  ................
  ................
  ................
  ......*.*.......
  ....*.....*.....
  ..*......*..*...
  .*......*....*..
  ........*.......
  .......*........
  ......**........
  ......**........
  ................
  ................
  ................
  ................
  ................


[display_glyph mmsec]
data:
  ................
  ................
  ...*.*...*.*....
  ..*.*.*.*.*.*...
  ..*...*.*...*...
  ..*...*.*...*...
  ................
  .**************.
  ................
  ...**..***..**..
  .*.....*...*....
  ..***..**..*....
  .....*.*...*....
  .****..***..**..
  ................
  ................

[display_glyph chamber]
data:
        ................
        ................
        ......***.......
        ......*.*.......
        ......*.*.......
        ......*.*.......
        ......*.*.......
        ......***.......
        ......***.......
        ......***.......
        ......***.......
        .....*****......
        .....*****......
        .....*****......
        ......***.......
        ................

[display]
lcd_type: uc1701
cs_pin: PB8
a0_pin: PB15
rst_pin: PB9
encoder_pins: ^PA9,^PA10
click_pin: ^!PB5
contrast: 63
spi_software_sclk_pin: PA5
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
display_group: shrek_status_screen
#display_group: __voron_display
# Use either:
# __voron_main : that is a complete menu you need to [include display_menu.cfg] here.
# __voron_empty: only activates the backlight of the display for 10 sek if you 
#                hit the knob with no other function. In this case you can comment out
#                [include display_menu.cfg]
# remove menu_root: ... if you want to use the stock menu
#menu_root: __voron_empty



[neopixel lcd]
# To control Neopixel RGB in mini12864 display
pin: PA15
chain_count: 3
initial_RED: 0.4
initial_GREEN: 0.2
initial_BLUE: 0.0
color_order: RGB

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

######################################################################
# Default 16x4 display
######################################################################

[display_data shrek_status_screen extruder]
position: 0, 0
text:
  {% set active_extruder = printer.toolhead.extruder %}
  { render("_heater_temperature", param_heater_name=active_extruder) }

[display_data shrek_status_screen fan]
position: 0, 10
text: { render("_fan_speed") }

[display_data shrek_status_screen heater_bed]
position: 1, 0
text: { render("_heater_temperature", param_heater_name="heater_bed") }

[display_data shrek_status_screen chambertemp]
position: 1, 10
text:
  ~chamber~
  # Show temperature
  { "%3.0f" % (printer['temperature_sensor chamber_temp'].temperature) }
  # Optionally show target
  ~degrees~


[display_data shrek_status_screen chamber]
position: 3, 0
text:
  {% if printer.display_status.message %}
    { printer.display_status.message }
  {% elif printer.idle_timeout.printing_time|int != 0 %}
    {% set pos = printer.motion_report.live_position %}
    {% set pos = printer.motion_report.live_position %}
    {% set actual_layer = printer.print_stats.info.current_layer %}
    {% set layers = printer.print_stats.info.total_layer %}
    
  {% else %}
    { "      " }
	~voron~
    { " V0.2189" }

  {% endif %}


[display_data shrek_status_screen print_status]
position: 3, 0
text: { render("_print_status") }


[display_template _print_status]
text:
  {% if printer.display_status.message %}
    { printer.display_status.message }
  {% elif printer.idle_timeout.printing_time %}
    {% set pos = printer.motion_report.live_position %}
    {% set actual_layer = printer.print_stats.info.current_layer %}
    {% set layers = printer.print_stats.info.total_layer %}
    { "L%3d/%3d   Z%-5.2f" % (actual_layer, layers, pos.z) }
  {% else %}
    Ready
  {% endif %}

[display_data shrek_status_screen print_progress]
position: 2, 0
text: { "{:^10.0%}".format(printer.display_status.progress) }
[display_data shrek_status_screen progress_bar]
position: 2, 1 # Draw graphical progress bar after text is written
text: { draw_progress_bar(2, 0, 10, printer.display_status.progress) }

[display_data shrek_status_screen printing_time]
position: 2, 10
text: #{ "%6s" % (render("_printing_time").strip(),) }
    {% set ptime = printer["gcode_macro M73"].r %}
    { "R%02d:%02d" % (ptime // 60, ptime % 60) }
    
### Modify M73 ###
[gcode_macro M73]
rename_existing: M73.1
variable_p: 0.0
variable_r: 0.0
gcode:
# Use a default 0 if _P is omitted.
  {% set P = params.P|default(0)|int %}
# Use a default 0 if _R is omitted.
  {% set R = params.R|default(0)|int %}
  M73.1 P{P}
  SET_GCODE_VARIABLE MACRO=M73 VARIABLE=p VALUE={P}
  SET_GCODE_VARIABLE MACRO=M73 VARIABLE=r VALUE={R}

[gcode_arcs]
resolution: 0.05

[display_data shrek_status_screen print_status]
position: 3, 0
text: { render("_print_status") }



[exclude_object]

#####################################################################
#   Macros
#####################################################################

#[gcode_macro BED_MESH_CALIBRATE]
#description: Perform QGL and bed mesh leveling
#rename_existing: BED_MESH_CALIBRATE_BASE
#gcode:
#  BED_MESH_CLEAR
#  ATTACH_PROBE 
#  BED_MESH_CALIBRATE_BASE {rawparams}
#  DOCK_PROBE 

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
      {% set BED_TEMP = params.BED|default(60)|float %}
      {% set EXTRUDER_TEMP = params.EXTRUDER|default(190)|float %}
      {% set MATERIAL = params.MATERIAL|default("XXX")|string %}
      White
      {% if MATERIAL == "ABS" %}
        SET_FAN_SPEED FAN=nevermore_fan SPEED=1
        SET_PRESSURE_ADVANCE ADVANCE=0.035
      {% elif MATERIAL == "PLA" %}
        SET_FAN_SPEED FAN=nevermore_fan SPEED=0
        SET_PRESSURE_ADVANCE ADVANCE=0.032
      {% elif MATERIAL == "XXX" %}
        SET_FAN_SPEED FAN=nevermore_fan SPEED=0.5
        SET_PRESSURE_ADVANCE ADVANCE=0.035
      {% endif %}

      # Předchozí dva řádky nám vytvořily proměnné BED_TEMP a EXTRUDER_TEMP, a doplnily je hodnotami ze Sliceru
    # V případě že slicer hodnoty nepředá, nastaví se defaultně 190 pro hotend, a 60 pro bed
    # Nastavení teplot
    # M104 nám nastaví teplotu na 150 stupňů. Je to teplota, kdy se dá očistit tryska a filament "neslintá"
    M104 S150
    # M190 nám nastaví teplotu bedu na hodnotu, kterou do makra předal slicer. A čekáme než se nahřeje bed
    M190 S{BED_TEMP}
    # M109 nastaví teplotu hotendu na hodnotu, kterou nám do makra předal slicer a čeká na její dosažení
    M109 S150 ; Set non dripping hotend temperature
    # UG90 nám přepne na absolutní koordináty
    G90
    # M83 přepne extruder na relativní vzdálenosti
    M83
    # POZOR - G32 je makro pro voron 2.4 a předpokládá se, že jej máte. Pro pořádek jsem jej přidal za PRINT_END
    # Toto makro nám zařídí homování a vyrovnání gantry u V2.4, pokud máte jinou tiskárnu, následující řádek smažte
    G32

    # BED_MESH_CLEAR nám vymaže předchozí uložené hodnoty meshe, chceme začínat s čistým štítem
    BED_MESH_CLEAR
    # A následující příkaz nám zkalibruje podložku pomocí sensoru (bltouch, indukční sensor, crtouch, klicky a jiné)
    BED_MESH_CALIBRATE
    #
    # G1 je gcode pro pohyb. Nyní přesuneme trysku do levého spodního rohu 5mm nad podložku

    # Nyní sjedeme tryskou 0,3mm nad podložku
    G90
    G1 X3 Y12 Z5 F5000
    # Nyní sjedeme tryskou 0,3mm nad podložku
    G1 Z0.3 F3000
    # Nyní čekáme na nahřátí trysky na hodnotu předanou slicerem

      M109 S{EXTRUDER_TEMP}

    # Resetování vzdálenosti extruderu
    G92 E0

    # Očištění trysky. Následující gcode nám pomalu posunuje trysku 14cm doprava a extruder vytlačí 30mm filamentu
    # První pohyb je pomalejší a delší (až do 12cm), a následuje rychlé očištění 2 cm na výsledných 14 cm
    G1 X70 E30 F600
    G1 X90 F5000
    G92 E0
    # Následně před samotným tiskem proběhne krátká retrakce a resetování vzdálenosti extruderu
    G1 E-0.2 F600
    G92 E0
   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning
    NEOPIXEL_DISPLAY LED="my_led" TYPE=extruder_temp MODE=glow

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 20) %}
        {% set z_safe = 20.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y110 F3600          ; park nozzle at rear
    SET_FAN_SPEED FAN=nevermore_fan SPEED=0


[gcode_macro G32]
gcode:
    # Uložíme aktuální stav tiskárny (pozici trysky, stav extruderu a další hodnoty)
    SAVE_GCODE_STATE NAME=STATE_G32
    # Přepneme na absolutní pozicování/vzdálenosti
    G90
    # zde je podmínka - pokud není tiskárna "vyhoumovaná" provede se příkaz home - G28
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28
    {% endif %}

    # Následuje opět home, ale nyní jen pro osu Z
    G28 Z
    # Obnovíme hodnoty původního stavu tiskárny
    RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F200                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro LEVEL_BED]
gcode:
    G28
    BED_SCREWS_ADJUST

[gcode_macro Teplota]
gcode:
    NEOPIXEL_DISPLAY LED="my_led" TYPE=extruder_temp MODE=glow

[gcode_macro Rychlost]
gcode:
    NEOPIXEL_DISPLAY LED="my_led" TYPE=print_speed MODE=glow

[gcode_macro Progress]
gcode:
    NEOPIXEL_DISPLAY LED="my_led" TYPE=print_percent MODE=glow

[gcode_macro Off]
gcode:
    SET_LED_TEMPLATE LED=my_led TEMPLATE=""
    SET_LED LED=my_led RED=0 GREEN=0 BLUE=0 
    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 WHITE=0

[gcode_macro White]
gcode:
    SET_LED_TEMPLATE LED=my_led TEMPLATE=""
    SET_LED LED=my_led RED=0 GREEN=0 BLUE=0 
    SET_LED LED="my_led" RED=1 GREEN=1 BLUE=1 WHITE=0

[gcode_macro Blue]
gcode:
    SET_LED_TEMPLATE LED=my_led TEMPLATE=""
    SET_LED LED=my_led RED=0 GREEN=0 BLUE=0 
    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=1 WHITE=0


[gcode_macro Red]
gcode:
    SET_LED_TEMPLATE LED=my_led TEMPLATE=""
    SET_LED LED=my_led RED=0 GREEN=0 BLUE=0 
    SET_LED LED="my_led" RED=1 GREEN=0 BLUE=0 WHITE=0

[gcode_macro Green]
gcode:
    SET_LED_TEMPLATE LED=my_led TEMPLATE=""
    SET_LED LED=my_led RED=0 GREEN=0 BLUE=0 
    SET_LED LED="my_led" RED=0 GREEN=1 BLUE=0 WHITE=0

[gcode_macro Toolhead_dopredu]
gcode:
    G90                            ; absolute positioning
    G1 X55 Y12 F4000 

[gcode_macro Toolhead_stred]
gcode:
    G90                            ; absolute positioning
    G1 X55 Y55 F4000 

[gcode_macro Toolhead_dozadu]
gcode:
    G90                            ; absolute positioning
    G1 X55 Y110 F4000 

[gcode_macro Zapnout_LEDky_na_kameru]
gcode:

    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1 INDEX=1
    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1 INDEX=2
    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1 INDEX=3
    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1 INDEX=4
    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1 INDEX=5
    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1 INDEX=6
    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1 INDEX=7
    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1 INDEX=8
    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1 INDEX=9
    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1 INDEX=10
    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1 INDEX=11
    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1 INDEX=12
    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1 INDEX=13
    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1 INDEX=12
    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1 INDEX=14
    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1 INDEX=15
    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1 INDEX=16
    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1 INDEX=17
    SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1 INDEX=18
    SET_LED LED="my_led" RED=0.7 GREEN=0.7 BLUE=0.7 SYNC=0 TRANSMIT=1 INDEX=19
    SET_LED LED="my_led" RED=0.7 GREEN=0.7 BLUE=0.7 SYNC=0 TRANSMIT=1 INDEX=20
    SET_LED LED="my_led" RED=0.7 GREEN=0.7 BLUE=0.7 SYNC=0 TRANSMIT=1 INDEX=21


    


[delayed_gcode Privitani]
initial_duration: 4
gcode:
        Ostreni_Na_Stred
        SET_LED LED="my_led" RED=0 GREEN=0 BLUE=0 WHITE=0
        SET_LED LED="my_led" RED=0 GREEN=0 BLUE=1 WHITE=0 INDEX=1
        SET_LED LED="my_led" RED=0 GREEN=0 BLUE=1 WHITE=0 INDEX=7
        SET_LED LED="my_led" RED=0 GREEN=0 BLUE=1 WHITE=0 INDEX=13
        G4 P300
        SET_LED LED="my_led" RED=0 GREEN=0 BLUE=1 WHITE=0 INDEX=2
        SET_LED LED="my_led" RED=0 GREEN=0 BLUE=1 WHITE=0 INDEX=8
        SET_LED LED="my_led" RED=0 GREEN=0 BLUE=1 WHITE=0 INDEX=14
        G4 P300
        SET_LED LED="my_led" RED=0 GREEN=0 BLUE=1 WHITE=0 INDEX=3
        SET_LED LED="my_led" RED=0 GREEN=0 BLUE=1 WHITE=0 INDEX=9
        SET_LED LED="my_led" RED=0 GREEN=0 BLUE=1 WHITE=0 INDEX=15
        G4 P300
        SET_LED LED="my_led" RED=0 GREEN=0 BLUE=1 WHITE=0 INDEX=4
        SET_LED LED="my_led" RED=0 GREEN=0 BLUE=1 WHITE=0 INDEX=10
        SET_LED LED="my_led" RED=0 GREEN=0 BLUE=1 WHITE=0 INDEX=16
        G4 P300
        SET_LED LED="my_led" RED=0 GREEN=0 BLUE=1 WHITE=0 INDEX=5
        SET_LED LED="my_led" RED=0 GREEN=0 BLUE=1 WHITE=0 INDEX=11
        SET_LED LED="my_led" RED=0 GREEN=0 BLUE=1 WHITE=0 INDEX=17
        G4 P300
        SET_LED LED="my_led" RED=0 GREEN=0 BLUE=1 WHITE=0 INDEX=6
        SET_LED LED="my_led" RED=0 GREEN=0 BLUE=1 WHITE=0 INDEX=12
        SET_LED LED="my_led" RED=0 GREEN=0 BLUE=1 WHITE=0 INDEX=18
        G4 P300
        SET_LED LED="my_led" RED=1 GREEN=1 BLUE=1 WHITE=1
       
        SET_LED LED=lcd RED=0.0 GREEN=0.5 BLUE=0.0 TRANSMIT=0
        SET_LED LED=lcd RED=0.0 GREEN=0.0 BLUE=0.5 TRANSMIT=1


######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    #LCDRGB R=0 G=1 B=0  ; Turn LCD green
    PAUSE                ; Pause

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
        #RESETRGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
                                
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor       
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+10} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        #M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro Ostreni_PLUS]
description: Focus Arducam plus
gcode:
    RUN_SHELL_COMMAND CMD=Ostreni_PLUSik

[gcode_shell_command Ostreni_PLUSik]
command: sh /home/pi/kamera_plus.sh 
timeout: 1.
verbose: True

[gcode_shell_command Ostreni_MINUSik]
command: sh /home/pi/kamera_minus.sh 
timeout: 1.
verbose: True

[gcode_shell_command Ostreni_STREDik]
command: sh /home/pi/kamera_stred.sh
timeout: 1.
verbose: True

[gcode_macro Ostreni_MINUS]
description: Focus Arducam minus
gcode:
    RUN_SHELL_COMMAND CMD=Ostreni_MINUSik

[gcode_macro Ostreni_Na_Stred]
description: Focus Arducam to desired value
gcode:
   
    RUN_SHELL_COMMAND CMD=Ostreni_STREDik

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  M106 S0
  CANCEL_PRINT_BASE

# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern
            # Diagonals
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            
            # Box
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
        
        # Small pattern
            # Small diagonals 
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            
            # Small box
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        G28
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 9.685
#*#
#*# [stepper_z]
#*# position_endstop = -1.105
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.108750, -0.036250, -0.067500
#*# 	  -0.121250, 0.000000, 0.003750
#*# 	  -0.126250, -0.045000, -0.010000
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 31.0
#*# max_x = 115.0
#*# min_y = 13.0
#*# max_y = 115.0
